<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="Button">
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="12,10,12,10" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource UIBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <Border x:Name="BorderFocus" CornerRadius="20"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Background="{DynamicResource UIBrush}" Visibility="Hidden"/>

                        <TextBlock Style="{DynamicResource TextBlockBaseStyle}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="{TemplateBinding Foreground}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Margin="{TemplateBinding Padding}">                            
                                <ContentPresenter />
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ButtonEx" BasedOn="{StaticResource {x:Type Button}}">
    </Style>

    <Style x:Key="ButtonGameDetails" TargetType="Button">
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="12,10,12,10" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource UIBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <Border x:Name="BorderFocus" CornerRadius="20"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Background="{DynamicResource ControlBackgroundBrush}" Visibility="Visible"/>

                        <TextBlock Style="{DynamicResource TextBlockBaseStyle}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="{TemplateBinding Foreground}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Margin="{TemplateBinding Padding}">                            
                                <ContentPresenter />
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="BorderFocus" Value="{DynamicResource UIBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="BorderFocus" Value="{DynamicResource UIBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChangeViewButton" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource SelectionLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent" HorizontalAlignment="Center" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Border Background="{TemplateBinding Background}" Height="40" Width="40" VerticalAlignment="Bottom"
                            x:Name="MainBorder" Opacity="0.4" CornerRadius="40">
                            <Border.Effect>
                                <BlurEffect Radius="40"/>
                            </Border.Effect>
                        </Border>
                        <Border BorderBrush="Transparent" Height="40" Width="40" VerticalAlignment="Bottom"
                            x:Name="MainBorderExtra" BorderThickness="4" CornerRadius="40">
                        </Border>
                        <Border BorderBrush="Transparent" Height="40" Width="40" VerticalAlignment="Bottom"
                            x:Name="MainBorderExtraBlur" BorderThickness="4" CornerRadius="40">
                            <Border.Effect>
                                <BlurEffect Radius="10"/>
                            </Border.Effect>
                        </Border>

                        <TextBlock 	Foreground="{TemplateBinding Foreground}"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"                           
									Text="&#xe8ab;" FontFamily="Segoe Fluent Icons, Segoe MDL2 Assets" FontSize="30"
                                    x:Name="ToggleIconText" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource UIBrush}" TargetName="MainBorder" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UIBrush}" TargetName="MainBorderExtra" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UIBrush}" TargetName="MainBorderExtraBlur" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource UIBrush}" TargetName="MainBorder" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UIBrush}" TargetName="MainBorderExtra" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UIBrush}" TargetName="MainBorderExtraBlur" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Text" Value="&#xe8cb;" TargetName="ToggleIconText" />
                            <Setter Property="FontSize" Value="28" TargetName="ToggleIconText" />
                        </Trigger>

                        <DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False">
                            <Setter Property="Focusable" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_ElemFilters, Path=Visibility}" Value="Visible">
                            <Setter Property="Focusable" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_ElemFiltersAdditional, Path=Visibility}" Value="Visible">
                            <Setter Property="Focusable" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_ContentFilterItems, Path=Visibility}" Value="Visible">
                            <Setter Property="Focusable" Value="True"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonMainMenu" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                            x:Name="MainBorder" Opacity="0.4" CornerRadius="40">
                            <Border.Effect>
                                <BlurEffect Radius="60"/>
                            </Border.Effect>
                        </Border>
                        <Border BorderBrush="Transparent"
                            x:Name="MainBorderExtra" BorderThickness="4" CornerRadius="40" Margin="-4">
                        </Border>
                        <Border BorderBrush="Transparent"
                            x:Name="MainBorderExtraBlur" BorderThickness="4" CornerRadius="40" Margin="-4">
                            <Border.Effect>
                                <BlurEffect Radius="10"/>
                            </Border.Effect>
                        </Border>
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource UIBrush}" TargetName="MainBorder" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UIBrush}" TargetName="MainBorderExtra" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UIBrush}" TargetName="MainBorderExtraBlur" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource UIBrush}" TargetName="MainBorder" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UIBrush}" TargetName="MainBorderExtra" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UIBrush}" TargetName="MainBorderExtraBlur" />
                        </Trigger>

                        <DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False">
                            <Setter Property="Focusable" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_ElemFilters, Path=Visibility}" Value="Visible">
                            <Setter Property="Focusable" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_ElemFiltersAdditional, Path=Visibility}" Value="Visible">
                            <Setter Property="Focusable" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_ContentFilterItems, Path=Visibility}" Value="Visible">
                            <Setter Property="Focusable" Value="True"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SidebarViewButton" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource SelectionLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="IsChecked" Value="True"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent" HorizontalAlignment="Center" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Border Background="{TemplateBinding Background}" Height="40" Width="40" VerticalAlignment="Bottom"
                            x:Name="MainBorder" Opacity="0.4" CornerRadius="40">
                            <Border.Effect>
                                <BlurEffect Radius="40"/>
                            </Border.Effect>
                        </Border>
                        <Border BorderBrush="Transparent" Height="40" Width="40" VerticalAlignment="Bottom"
                            x:Name="MainBorderExtra" BorderThickness="4" CornerRadius="40">
                        </Border>
                        <Border BorderBrush="Transparent" Height="40" Width="40" VerticalAlignment="Bottom"
                            x:Name="MainBorderExtraBlur" BorderThickness="4" CornerRadius="40">
                            <Border.Effect>
                                <BlurEffect Radius="10"/>
                            </Border.Effect>
                        </Border>

                        <TextBlock 	Foreground="{TemplateBinding Foreground}"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"                           
									Text="&#59178;" FontFamily="Segoe Fluent Icons, Segoe MDL2 Assets" FontSize="30"
                                    x:Name="ToggleIconText" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource UIBrush}" TargetName="MainBorder" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UIBrush}" TargetName="MainBorderExtra" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UIBrush}" TargetName="MainBorderExtraBlur" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource UIBrush}" TargetName="MainBorder" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UIBrush}" TargetName="MainBorderExtra" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UIBrush}" TargetName="MainBorderExtraBlur" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Text" Value="&#59179;" TargetName="ToggleIconText" />
                            <Setter Property="FontSize" Value="28" TargetName="ToggleIconText" />
                        </Trigger>

                        <DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="False">
                            <Setter Property="Focusable" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_ElemFilters, Path=Visibility}" Value="Visible">
                            <Setter Property="Focusable" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_ElemFiltersAdditional, Path=Visibility}" Value="Visible">
                            <Setter Property="Focusable" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_ContentFilterItems, Path=Visibility}" Value="Visible">
                            <Setter Property="Focusable" Value="True"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=ChangeViewButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsChecked" Value="False"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ZoomButton" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource SelectionLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent">
                        <Border x:Name="Background" Background="{DynamicResource UIBrush}" CornerRadius="75" Visibility="Hidden"/>
                        <Border x:Name="BorderFocus" BorderThickness="3" BorderBrush="{DynamicResource UIBrush}" Margin="0" CornerRadius="80" Visibility="Hidden"/>
                        <StackPanel x:Name="ON" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE740;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel x:Name="OFF" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE73F;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Visibility" Value="Visible" TargetName="Background" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Visibility" Value="Visible" TargetName="Background" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="ON" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="OFF" Value="Collapsed"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed">
                            <Setter Property="IsChecked" Value="False"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MuteButton" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource SelectionLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="IsChecked" Value="{SettingsBinding Fullscreen.IsMusicMuted, Mode=TwoWay}"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent">
                        <Border x:Name="Background" Background="{DynamicResource UIBrush}" CornerRadius="75" Visibility="Hidden"/>
                        <Border x:Name="BorderFocus" BorderThickness="3" BorderBrush="{DynamicResource UIBrush}" Margin="0" CornerRadius="80" Visibility="Hidden"/>
                        <StackPanel x:Name="ON" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE767;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel x:Name="OFF" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE74F;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Visibility" Value="Visible" TargetName="Background" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Visibility" Value="Visible" TargetName="Background" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="OFF" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="ON" Value="Collapsed"/>
                        </Trigger>

                        <!--DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed">
                            <Setter Property="IsChecked" Value="False"/>
                        </DataTrigger-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StopPlayButton" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource SelectionLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent">
                        <Border x:Name="Background" Background="{DynamicResource UIBrush}" CornerRadius="75" Visibility="Hidden"/>
                        <Border x:Name="BorderFocus" BorderThickness="3" BorderBrush="{DynamicResource UIBrush}" Margin="0" CornerRadius="80" Visibility="Hidden"/>
                        <StackPanel x:Name="ON" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE71A;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel x:Name="OFF" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE768;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Visibility" Value="Visible" TargetName="Background" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Visibility" Value="Visible" TargetName="Background" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="ON" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="OFF" Value="Collapsed"/>
                        </Trigger>
						
						<DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=PART_ElemGameStatus, Path=Visibility}" Value="Visible">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayPauseButton" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource SelectionLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="IsChecked" Value="True"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent">
                        <Border x:Name="Background" Background="{DynamicResource UIBrush}" CornerRadius="75" Visibility="Hidden"/>
                        <Border x:Name="BorderFocus" BorderThickness="3" BorderBrush="{DynamicResource UIBrush}" Margin="0" CornerRadius="80" Visibility="Hidden"/>
                        <StackPanel x:Name="ON" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE769;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel x:Name="OFF" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE768;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Visibility" Value="Visible" TargetName="Background" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Visibility" Value="Visible" TargetName="Background" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="OFF" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="ON" Value="Collapsed"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=PART_ElemGameStatus, Path=Visibility}" Value="Visible">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>